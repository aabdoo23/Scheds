@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scheds - Find Study Rooms</title>
    <link rel="icon" type="image/png" href="~/images/abdo.png">
    <link rel="stylesheet" href="~/css/styles.css">

    <style>
        .find-study-rooms-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 40px;
            min-height: 100vh;
            font-family: 'Arial', sans-serif;
            color: var(--light-text);
        }

        .search-section {
            background-color: var(--lighter-dark);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            padding: 20px 40px;
            border-radius: 12px;
            margin-top: 80px;
            margin-bottom: 40px;
            width: 100%;
            max-width: 600px;
        }

        .search-section h1 {
            font-size: 2.5rem;
            text-align: center;
            color: var(--light-text) margin-bottom: 20px;
        }

        .search-form {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .search-form label {
            font-size: 1.2rem;
            color: var(--light-text);
        }

        .search-form select {
            padding: 10px;
            font-size: 1.1rem;
            border: 2px solid #ddd;
            border-radius: 8px;
            transition: border-color 0.3s;
        }

        .search-form select:focus {
            border-color: var(--lightest-dark);
            outline: none;
        }

        .select {
            border: 2px solid var(--light-text);
            /* Default border color */
            padding: 10px;
            border-radius: 5px;
            transition: border-color 0.3s ease;
        }

        /* Change the border color to #ff7300 on focus */
        .select:focus {
            border-color: #ff7300;
            outline: none;
            /* Remove default outline */
        }

        /* Style for options hover color */
        .select .option:hover {
            background-color: #ff7300;
            color: #fff;
            /* Change text color to white on hover for better contrast */
        }

        .btnn-primary {
            width: 165px;
            height: 50px;
            cursor: pointer;
            color: #fff;
            font-size: 17px;
            font-weight: 600;
            border-radius: 15px;
            border: none;
            position: relative;
            background: var(--dark-blue);
            transition: 0.1s;
        }

        .btnn-primary::after {
            content: '';
            width: 100%;
            height: 100%;
            background: radial-gradient(circle farthest-corner at 10% 20%, var(--light-blue) 17.8%, var(--dark-blue) 100.2%);
            filter: blur(15px);
            z-index: -1;
            position: absolute;
            left: 0;
            top: 0;
        }

        .btnn-primary:active {
            transform: scale(0.9) rotate(3deg);
            background: radial-gradient(circle farthest-corner at 10% 20%, var(--light-blue) 17.8%, var(--dark-blue) 100.2%);
            transition: 0.1s;
        }

        .results-section {
            width: 100%;
            max-width: 900px;
            background-color: var(--lighter-dark);
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .results-section h2 {
            font-size: 2rem;
            margin-bottom: 20px;
            color: var(--light-text)
            text-align: center;
        }

        #results {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }

        .room-card {

            max-width: calc(33.33% - 20px);
            background-color: #f7f7f7;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }

        .room-card:hover {
            transform: translateY(-5px);
        }

        .room-card h3 {
            font-size: 1.5rem;
            margin-bottom: 10px;
            color: #333;
        }
    </style>
</head>

<body>
    @await Html.PartialAsync("_NavbarPartial")

    <div class="find-study-rooms-container">
        <div class="search-section">
            <h1 class="animated-text">Find Study Rooms</h1>
            <div class="search-form">
                <label for="day-select">Select Day</label>
                <select class="select" id="day-select">
                    <option value="saturday">Saturday</option>
                    <option value="sunday">Sunday</option>
                    <option value="monday">Monday</option>
                    <option value="tuesday">Tuesday</option>
                    <option value="wednesday">Wednesday</option>
                    <option value="thursday">Thursday</option>
                </select>

                <label for="time-select">Select Time</label>
                <select class="select" id="time-select">
                    <option value="8:30">8:30 AM</option>
                    <option value="10:30">10:30 AM</option>
                    <option value="12:30">12:30 PM</option>
                    <option value="14:30">2:30 PM</option>
                    <option value="16:30">4:30 PM</option>
                    <option value="18:30">6:30 PM</option>
                    <option value="20:30">8:30 PM</option>
                </select>

                <button id="search-button" class="btnn-primary" style="width: 160px;">Search</button>
            </div>
        </div>

        <div class="results-section">
            <h2>Available Rooms</h2>
            <div id="results">
            </div>
        </div>
    </div>

    <script src="~/js/find-study-rooms.js"></script>
    <script>

        const rootElement = document.documentElement;
        const colorModeCheckbox = document.getElementById('color_mode');

        // Check if user has a mode preference saved in localStorage
        const currentMode = localStorage.getItem('theme');
        if (currentMode === 'light') {
            rootElement.classList.add('light-mode');
            colorModeCheckbox.checked = true;  // Ensure the checkbox reflects the current mode
        }

        // Event listener for the checkbox to toggle dark/light mode
        colorModeCheckbox.addEventListener('change', () => {
            if (colorModeCheckbox.checked) {
                rootElement.classList.add('light-mode');
                localStorage.setItem('theme', 'light');
            } else {
                rootElement.classList.remove('light-mode');
                localStorage.setItem('theme', 'dark');
            }
        });
    </script>
</body>

</html>
