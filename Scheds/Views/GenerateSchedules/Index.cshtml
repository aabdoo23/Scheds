@using Scheds.Models
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generate Schedules - Scheds</title>
    <link rel="stylesheet" href="~/css/styles.css">
</head>

<body>
    <!-- Navbar -->
    <nav class="navbar">
        <div class="logo">
            <a href="#"><img src="~/images/logo.png" alt="Scheds Logo" class="logo-img"></a>
        </div>
        <ul class="nav-links">
            <li><a href="/">Home</a></li>
            <li><a href="/GenerateSchedules">Generate Schedules</a></li>
            <li><a href="/FindStudyRooms">Find Study Rooms</a></li>
        </ul>
    </nav>

    <!-- Generate Schedules Page -->
    <div class="container">
        <!-- Search and Cart Section -->
        <section class="search-cart">
            <div class="search-section">
                <h1>Search for Courses</h1>
                <div class="search-bar">
                    <div class="group">
                        <svg class="icon" aria-hidden="true" viewBox="0 0 24 24"><g><path d="M21.53 20.47l-3.66-3.66C19.195 15.24 20 13.214 20 11c0-4.97-4.03-9-9-9s-9 4.03-9 9 4.03 9 9 9c2.215 0 4.24-.804 5.808-2.13l3.66 3.66c.147.146.34.22.53.22s.385-.073.53-.22c.295-.293.295-.767.002-1.06zM3.5 11c0-4.135 3.365-7.5 7.5-7.5s7.5 3.365 7.5 7.5-3.365 7.5-7.5 7.5-7.5-3.365-7.5-7.5z"></path></g></svg>
                        <input placeholder="Search" type="search" class="input">
                    </div>

                    <button id="add-to-cart" class="btn-primary">Add to Cart</button>
                </div>
            </div>
            <div id="cart">
                <h2>Your Cart</h2>
                <ul id="cart-items"></ul>
            </div>
        </section>


        <!-- Customization Section -->
        <section class="customization">
            <h2>Customize Your Schedule</h2>
            <div class="box">
                <label class="slider-label">Minimum Slots per Day</label>
                <div class="inner-box">
                    <div class="line"></div>
                    <input type="range" class="input-range"  min="0" max="4" value="0" />
                    
                </div>
                <p class="number">0</p>
            </div>
            
            <div class="box">
                <label class="slider-label">Maximum Gap Period (hours)</label>
                <div class="inner-box">
                    <div class="line"></div>
                    <input type="range" class="input-range"  min="0" max="6" value="0" />
                    
                </div>
                <p class="number">0</p>
            </div>
            
            <div class="box">
                <label class="slider-label">Maximum Number of Schedules</label>
                <div class="inner-box">
                    <div class="line"></div>
                    <input type="range" class="input-range"  min="0" max="500" value="0" />
                    
                </div>
                <p class="number">0</p>
            </div>
            
            <div class="box">
                <label class="slider-label">Maximum Days on Campus</label>
                <div class="inner-box">
                    <div class="line"></div>
                    <input type="range" class="input-range"  min="0" max="6" value="0" />
                    
                </div>
                <p class="number">0</p>
            </div>
            
            
            <div class="checkbox-group">
                <h3>Select Days on Campus:</h3>
                <label><input type="checkbox" name="days" value="all"> All Week</label>
                <label><input type="checkbox" name="days" value="sunday"> Sunday</label>
                <label><input type="checkbox" name="days" value="monday"> Monday</label>
                <label><input type="checkbox" name="days" value="tuesday"> Tuesday</label>
                <label><input type="checkbox" name="days" value="wednesday"> Wednesday</label>
                <label><input type="checkbox" name="days" value="thursday"> Thursday</label>
                <label><input type="checkbox" name="days" value="friday"> Friday</label>
                <label><input type="checkbox" name="days" value="saturday"> Saturday</label>
            </div>
            <div class="checkbox-group">
                <h3>Select First Slot Time:</h3>
                <label><input type="checkbox" name="time" value="830"> 8:30 AM</label>
                <label><input type="checkbox" name="time" value="1030"> 10:30 AM</label>
                <label><input type="checkbox" name="time" value="1230"> 12:30 PM</label>
                <label><input type="checkbox" name="time" value="1430"> 2:30 PM</label>
            </div>
            <div class="checkbox-group">
                <h3>Select Last Slot Time:</h3>
                <label><input type="checkbox" name="time" value="1230"> 12:30 PM</label>
                <label><input type="checkbox" name="time" value="1430"> 2:30 PM</label>
                <label><input type="checkbox" name="time" value="1630"> 4:30 PM</label>
                <label><input type="checkbox" name="time" value="1830"> 6:30 PM</label>
            </div>
            <button id="generate-schedule" class="btn-primary">Generate Schedule</button>
        </section>

        <!-- Generated Schedules Section -->
        <section class="generated-schedules">
            <h2>Generated Schedules</h2>
            <div class="schedule-container">
                @{
                    // Initialize the 2D array with 7 days (Saturday to Friday)
                    ReturnedCardItem[,] scheduleArray = new ReturnedCardItem[7, 24];
                    scheduleArray[2, 12] = new ReturnedCardItem
            {
                cardId = 1,
                courseName = "Artificial Intelligence",
                courseCode = "AIS415",
                instructorName = "Dr. John Doe",
                section = "1A",
                subType = "Lecture",
                credits = 3,
                seatsLeft = 10,
                day = "Monday",
                startTime = TimeSpan.Parse("10:30"),
                endTime = TimeSpan.Parse("12:30"),
                room = "F45"
            };
                }

                @await Component.InvokeAsync("ScheduleViewComponent", scheduleArray)

                <button id="prev-schedule" class="btn-secondary">← Previous</button>
                <button id="next-schedule" class="btn-secondary">Next →</button>
            </div>
        </section>
        @* @await Component.InvokeAsync("CardItemViewComponent",new ReturnedCardItem{
        cardId=1,
        courseName="Artificial IntelligenceArtificial Intelligence",
        courseCode="AIS415",
        instructorName="Dr. John Doe",
        section="1A",
        subType="Lecture",
        credits=3,
        seatsLeft=0,
        day="Monday",
        startTime=TimeSpan.Parse("10:30"),
        endTime=TimeSpan.Parse("12:30"),
        room="F45"
        }) *@
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            fetch('/api/coursebase/getAllCourses')
                .then(response => response.json())
                .then(courses => {
                    const searchInput = document.getElementById('course-search');
                    searchInput.addEventListener('input', () => {
                        const query = searchInput.value.toLowerCase();
                        const filteredCourses = courses.filter(course =>
                            course.courseName.toLowerCase().includes(query) ||
                            course.courseCode.toLowerCase().includes(query)
                        );
                        updateSearchResults(filteredCourses);
                    });
                })
                .catch(error => console.error('Error fetching courses:', error));
        });

        function updateSearchResults(courses) {
            const searchInput = document.getElementById('course-search');
            const resultsContainer = document.getElementById('cart-items');
            resultsContainer.innerHTML = '';

            courses.forEach(course => {
                const listItem = document.createElement('li');
                listItem.textContent = `${course.courseName} (${course.courseCode})`;
                resultsContainer.appendChild(listItem);
            });
        }
    </script>

    <script >
        document.querySelectorAll('.box').forEach(box => {
        const input_range = box.querySelector('.input-range');
        const number = box.querySelector('.number');
        const line = box.querySelector('.line');
        const max_value = input_range.max;

        input_range.addEventListener('input', () => {
            const value = input_range.value;
            number.innerHTML = value;
            line.style.width = (value / max_value) * 100 + '%';
        });
    });

    </script>
</body>

</html>
